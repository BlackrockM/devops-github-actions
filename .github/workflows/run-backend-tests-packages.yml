name: Run Backend Tests With Packages
on:
  workflow_call:
    inputs:
      check_draft_pull_request:
        default: false
        required: false
        type: boolean
      node_version:
        default: '20.17-alpine'
        required: false
        type: string
      checkout_persist_credentials:
        default: false
        required: false
        type: boolean
      install_packages_command:
        default: 'npm ci'
        required: false
        type: string
      run_tests_command:
        default: 'npm run test'
        required: false
        type: string
      run_optional_command:
        default: ''
        required: false
        type: string
      install_git:
        default: true
        required: false
        type: boolean
      install_git_command:
        default: 'apk add --no-cache git'
        required: false
        type: string
jobs:
  run-tests:
    runs-on: ubuntu-latest
    container: 'node:${{ inputs.node_version }}'
    permissions:
      contents: read
      packages: read
    if: ${{ !github.event.pull_request.draft || inputs.check_draft_pull_request }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: ${{ inputs.checkout_persist_credentials }}
      - name: 'Setup node'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '20.17'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@blackrockm'
          token: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Run optional command(s)
        if: ${{ inputs.run_optional_command }}
        run: ${{ inputs.run_optional_command }}
      - name: Install Git
        if: ${{ inputs.install_git }}
        run: ${{ inputs.install_git_command }}
      - name: Fix install packages problems
        run: chown $(whoami) .
      - name: debug
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
        run: ls -lah && env | grep NODE && cat $NPM_CONFIG_USERCONFIG
      - name: Install packages
        run: ${{ inputs.install_packages_command }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}
      - name: Run Tests
        run: ${{ inputs.run_tests_command }}